<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddCustomerOperation" xml:space="preserve">
    <value>Add a Customer</value>
    <comment>Operation to add a customer.</comment>
  </data>
  <data name="Address1" xml:space="preserve">
    <value>Address</value>
    <comment>The mail address.</comment>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
    <comment>Cancel</comment>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
    <comment>The city.</comment>
  </data>
  <data name="ClearSelection" xml:space="preserve">
    <value>Clear Selection</value>
    <comment>Clears selecton from items.</comment>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
    <comment>The company name.</comment>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
    <comment>The country.</comment>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
    <comment>Customer</comment>
  </data>
  <data name="CustomerProperties" xml:space="preserve">
    <value>Customer Properties</value>
    <comment>Customer Properties</comment>
  </data>
  <data name="DateOfBirth" xml:space="preserve">
    <value>Date of Birth</value>
    <comment>Date of Birth</comment>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
    <comment>Deletes an object.</comment>
  </data>
  <data name="DeleteCustomerOperation" xml:space="preserve">
    <value>Delete a Customer</value>
    <comment>Operation to delete a customer.</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
    <comment>Description</comment>
  </data>
  <data name="DeveloperLicense" xml:space="preserve">
    <value>Developer License</value>
    <comment>Developer License</comment>
  </data>
  <data name="ApplicationName" xml:space="preserve">
    <value>Trading Post</value>
    <comment>The title for all non-specific error dialogs.</comment>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
    <comment>Edits an object.</comment>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
    <comment>The email address.</comment>
  </data>
  <data name="FilesUpToDate" xml:space="preserve">
    <value>All files are up to date.</value>
    <comment>Files are up to date status message.</comment>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
    <comment>First name header.</comment>
  </data>
  <data name="Identifier" xml:space="preserve">
    <value>Identifier</value>
    <comment>Identifier</comment>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
    <comment>Last name header.</comment>
  </data>
  <data name="LicenseProperties" xml:space="preserve">
    <value>License Properties</value>
    <comment>License Properties</comment>
  </data>
  <data name="MiddleName" xml:space="preserve">
    <value>Middle Name</value>
    <comment>Middle name header.</comment>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
    <comment>Name</comment>
  </data>
  <data name="NewCustomer" xml:space="preserve">
    <value>New Customer</value>
    <comment>Creates a new customer.</comment>
  </data>
  <data name="NewLicense" xml:space="preserve">
    <value>New License</value>
    <comment>Creates a new license.</comment>
  </data>
  <data name="NewProduct" xml:space="preserve">
    <value>New Product</value>
    <comment>Creates a new product.</comment>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
    <comment>OK</comment>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
    <comment>Opens an object.</comment>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
    <comment>The phone number.</comment>
  </data>
  <data name="PostalCode" xml:space="preserve">
    <value>Zip</value>
    <comment>The postal/zip code.</comment>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Product</value>
    <comment>Product</comment>
  </data>
  <data name="ProductProperties" xml:space="preserve">
    <value>Product Properties</value>
    <comment>Product Properties</comment>
  </data>
  <data name="Province" xml:space="preserve">
    <value>State</value>
    <comment>The province/state.</comment>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Rename</value>
    <comment>Renames an object.</comment>
  </data>
  <data name="RuntimeLicense" xml:space="preserve">
    <value>Runtime License</value>
    <comment>Runtime License</comment>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>Select All</value>
    <comment>Selects all items.</comment>
  </data>
  <data name="UpdateCustomer" xml:space="preserve">
    <value>Edit Customer</value>
    <comment>Updates the customer.</comment>
  </data>
  <data name="UpdateCustomerOperation" xml:space="preserve">
    <value>Update a Customer</value>
    <comment>Operation to update a customer.</comment>
  </data>
  <data name="UpdateProduct" xml:space="preserve">
    <value>Edit Product</value>
    <comment>Updates the product.</comment>
  </data>
  <data name="Count" xml:space="preserve">
    <value>Count</value>
    <comment>Count Label</comment>
  </data>
  <data name="Licenses" xml:space="preserve">
    <value>Licenses</value>
    <comment>Licenses</comment>
  </data>
  <data name="LicenseId" xml:space="preserve">
    <value>License ID</value>
    <comment>License ID</comment>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign In</value>
    <comment>Sign in with new credentials.</comment>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
    <comment>A new item.</comment>
  </data>
  <data name="Properties" xml:space="preserve">
    <value>Properties</value>
    <comment>The prompt for properties.</comment>
  </data>
  <data name="License" xml:space="preserve">
    <value>License</value>
    <comment>License</comment>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Content</value>
    <comment>Content</comment>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
    <comment>Details</comment>
  </data>
  <data name="DetailsPane" xml:space="preserve">
    <value>Details Pane</value>
    <comment>Details Pane</comment>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
    <comment>Home</comment>
  </data>
  <data name="Layout" xml:space="preserve">
    <value>Layout</value>
    <comment>Layout</comment>
  </data>
  <data name="NavigationPane" xml:space="preserve">
    <value>Navigation Pane</value>
    <comment>Navigation Pane</comment>
  </data>
  <data name="Organize" xml:space="preserve">
    <value>Organize</value>
    <comment>Organize</comment>
  </data>
  <data name="Panes" xml:space="preserve">
    <value>Panes</value>
    <comment>Panes</comment>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
    <comment>Select</comment>
  </data>
  <data name="Tiles" xml:space="preserve">
    <value>Tiles</value>
    <comment>Tiles</comment>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
    <comment>View</comment>
  </data>
</root>